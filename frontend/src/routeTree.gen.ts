/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AccountImport } from './routes/account'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as ProjectsSubmitImport } from './routes/projects/submit'
import { Route as LegalTermsImport } from './routes/legal/terms'
import { Route as LegalPrivacyPolicyImport } from './routes/legal/privacy-policy'
import { Route as AuthCallbackImport } from './routes/auth/callback'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsSubmitRoute = ProjectsSubmitImport.update({
  id: '/projects/submit',
  path: '/projects/submit',
  getParentRoute: () => rootRoute,
} as any)

const LegalTermsRoute = LegalTermsImport.update({
  id: '/legal/terms',
  path: '/legal/terms',
  getParentRoute: () => rootRoute,
} as any)

const LegalPrivacyPolicyRoute = LegalPrivacyPolicyImport.update({
  id: '/legal/privacy-policy',
  path: '/legal/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/legal/privacy-policy': {
      id: '/legal/privacy-policy'
      path: '/legal/privacy-policy'
      fullPath: '/legal/privacy-policy'
      preLoaderRoute: typeof LegalPrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/legal/terms': {
      id: '/legal/terms'
      path: '/legal/terms'
      fullPath: '/legal/terms'
      preLoaderRoute: typeof LegalTermsImport
      parentRoute: typeof rootRoute
    }
    '/projects/submit': {
      id: '/projects/submit'
      path: '/projects/submit'
      fullPath: '/projects/submit'
      preLoaderRoute: typeof ProjectsSubmitImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/legal/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/legal/terms': typeof LegalTermsRoute
  '/projects/submit': typeof ProjectsSubmitRoute
  '/projects': typeof ProjectsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/legal/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/legal/terms': typeof LegalTermsRoute
  '/projects/submit': typeof ProjectsSubmitRoute
  '/projects': typeof ProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/legal/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/legal/terms': typeof LegalTermsRoute
  '/projects/submit': typeof ProjectsSubmitRoute
  '/projects/': typeof ProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/login'
    | '/signup'
    | '/auth/callback'
    | '/legal/privacy-policy'
    | '/legal/terms'
    | '/projects/submit'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/login'
    | '/signup'
    | '/auth/callback'
    | '/legal/privacy-policy'
    | '/legal/terms'
    | '/projects/submit'
    | '/projects'
  id:
    | '__root__'
    | '/'
    | '/account'
    | '/login'
    | '/signup'
    | '/auth/callback'
    | '/legal/privacy-policy'
    | '/legal/terms'
    | '/projects/submit'
    | '/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  LegalPrivacyPolicyRoute: typeof LegalPrivacyPolicyRoute
  LegalTermsRoute: typeof LegalTermsRoute
  ProjectsSubmitRoute: typeof ProjectsSubmitRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  LegalPrivacyPolicyRoute: LegalPrivacyPolicyRoute,
  LegalTermsRoute: LegalTermsRoute,
  ProjectsSubmitRoute: ProjectsSubmitRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/account",
        "/login",
        "/signup",
        "/auth/callback",
        "/legal/privacy-policy",
        "/legal/terms",
        "/projects/submit",
        "/projects/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/account": {
      "filePath": "account.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/auth/callback": {
      "filePath": "auth/callback.tsx"
    },
    "/legal/privacy-policy": {
      "filePath": "legal/privacy-policy.tsx"
    },
    "/legal/terms": {
      "filePath": "legal/terms.tsx"
    },
    "/projects/submit": {
      "filePath": "projects/submit.tsx"
    },
    "/projects/": {
      "filePath": "projects/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
