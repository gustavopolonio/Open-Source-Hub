generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  passwordHash  String
  name          String
  bio           String?
  avatarUrl     String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  bookmarks     Bookmark[]
  oauthAccounts OauthAccount[]
  projects      Project[]
  votes         Vote[]
  skills        Skill[]
}

model Skill {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model OauthAccount {
  id                               Int      @id @default(autoincrement())
  provider                         Provider @default(GITHUB)
  providerUserId                   String   @unique
  createdAt                        DateTime @default(now())
  userId                           Int
  providerUserAccessTokenEncrypted String
  ivEncrypt                        String
  tagEncrypt                       String
  user                             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, userId])
}

model Project {
  id                  Int        @id @default(autoincrement())
  gitHubProjectId     Int        @unique
  name                String
  description         String?
  programmingLanguage String?
  gitHubStars         Int
  license             String?
  liveLink            String?
  avatarUrl           String?
  repoUrl             String
  createdAt           DateTime   @default(now())
  gitHubCreatedAt     DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  submittedBy         Int
  bookmarks           Bookmark[]
  author              User       @relation(fields: [submittedBy], references: [id], onDelete: Cascade)
  votes               Vote[]
  tags                Tag[]
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  projects Project[]
}

model Vote {
  createdAt DateTime @default(now())
  userId    Int
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, projectId])
}

model Bookmark {
  createdAt DateTime @default(now())
  userId    Int
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, projectId])
}

enum Provider {
  GITHUB
}
